# Automatically generated by pb2py
# fmt: off
from .. import protobuf as p

if __debug__:
    try:
        from typing import Dict, List  # noqa: F401
        from typing_extensions import Literal  # noqa: F401
        EnumTypeTronResourceCode = Literal[0, 1]
    except ImportError:
        pass


class TronFreezeBalanceContract(p.MessageType):

    def __init__(
        self,
        frozen_balance: int = None,
        frozen_duration: int = None,
        resource: EnumTypeTronResourceCode = None,
        receiver_address: str = None,
    ) -> None:
        self.frozen_balance = frozen_balance
        self.frozen_duration = frozen_duration
        self.resource = resource
        self.receiver_address = receiver_address

    @classmethod
    def get_fields(cls) -> Dict:
        return {
            1: ('frozen_balance', p.UVarintType, 0),
            2: ('frozen_duration', p.UVarintType, 0),
            3: ('resource', p.EnumType("TronResourceCode", (0, 1)), 0),
            4: ('receiver_address', p.UnicodeType, 0),
        }
